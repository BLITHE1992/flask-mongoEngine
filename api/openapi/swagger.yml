swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger ReST Article
consumes:
  - application/json
produces:
  - application/json


# Paths supported by the server application
paths:
  /datasets:
    get:
      operationId: get_dataset_by_id
      tags:
        - Datasets
      summary: Retrieve a Dataset by its ID
      description: This retrieves an existing *Dataset*. The API user indicates a *Dataset ID*. The GET request returns a *Dataset object*.
      x-swagger-router-controller: controllers.datasets_controller
      parameters:
        - name: requested_dataset_id
          in: query
          type: string
          description: The API user indicates a Dataset ID
          required: true
      responses:
        200:
          description: Successfully read people list operation
          schema:
            type: object
            properties:
              dataset_id:
                type: string
                example: '40655045bfy'
              dataset_filename:
                type: string
                example: 'KPIs Sheet.xlsx'
              dataset_rows:
                type: integer
                example: 1500
              dataset_columns:
                type: integer
                example: 8
              dataset_headers:
                type: array
                items:
                  type: string
                  example: ['Revenue','Sign-Ups','Active Users']

    post:
      tags:
        - Datasets
      summary: Creates a new Dataset
      description: This processes data provided by the API user and creates a new *Dataset*. The API user uploads a data *Source file*. The POST request returns a *Dataset ID*.
      x-swagger-router-controller: controllers.datasets_controller
      operationId: post_dataset_with_file
      parameters:
        - name: person
          in: body
          description: Person to create
          required: True
          schema:
            type: object
            properties:
              fname:
                type: string
                description: First name of person to create
              lname:
                type: string
                description: Last name of person to create
      responses:
        201:
          description: Succesful *Dataset* creation
          schema:
            type: object
            properties:
              dataset_id:
                type: string
                example: '40655045bfy'
              dataset_filename:
                type: string
                example: 'KPIs Sheet.xlsx'
              dataset_rows:
                type: integer
                example: 1500
              dataset_columns:
                type: integer
                example: 8
              dataset_headers:
                type: array
                items:
                  type: string
                  example: ['Revenue','Sign-Ups','Active Users']

  # /people/{lname}:
  #   get:
  #     operationId: people.read_one
  #     tags:
  #       - people
  #     summary: Read one person from the people list
  #     description: Read one person from the people list
  #     parameters:
  #       - name: lname
  #         in: path
  #         description: Last name of the person to get from the list
  #         type: string
  #         required: True
  #     responses:
  #       200:
  #         description: Successfully read person from people list operation
  #         schema:
  #           properties:
  #             fname:
  #               type: string
  #             lname:
  #               type: string
  #             timestamp:
  #               type: string

  #   put:
  #     operationId: people.update
  #     tags:
  #       - people
  #     summary: Update a person in the people list
  #     description: Update a person in the people list
  #     parameters:
  #       - name: lname
  #         in: path
  #         description: Last name of the person to update in the list
  #         type: string
  #         required: True
  #       - name: person
  #         in: body
  #         schema:
  #           type: object
  #           properties:
  #             fname:
  #               type: string
  #             lname:
  #               type: string
  #     responses:
  #       200:
  #         description: Successfully updated person in people list

  #   delete:
  #     operationId: people.delete
  #     tags:
  #       - people
  #     summary: Delete a person from the people list
  #     description: Delete a person
  #     parameters:
  #       - name: lname
  #         in: path
  #         type: string
  #         required: True
  #     responses:
  #       200:
  #         description: Successfully deleted a person from people list
